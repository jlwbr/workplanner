// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Planning {
  id        String   @id @default(cuid())
  date      DateTime
  channelId String

  channel      Channel        @relation(fields: [channelId], references: [id])
  PlanningItem PlanningItem[]
  @@unique([id, date, channelId])
}

model PlanningItem {
  id             String @id @default(cuid())
  planningId     String
  planningRuleId String

  Planning     Planning     @relation(fields: [planningId], references: [id])
  PlanningRule PlanningRule @relation(fields: [planningRuleId], references: [id])
}

model PlanningRule {
  id        String @id @default(cuid())
  name      String
  rule      String
  channelId String

  channel      Channel        @relation(fields: [channelId], references: [id])
  PlanningItem PlanningItem[]
}

model Channel {
  id           String         @id
  name         String         @unique
  members      User[]
  PlanningRule PlanningRule[]
  Planning     Planning[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  admin         Boolean   @default(false)
  editor         Boolean   @default(false)
  accounts      Account[]
  sessions      Session[]
  channels      Channel[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
