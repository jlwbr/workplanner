// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Comment {
  id         String @id @default(cuid())
  text       String
  todoItemId String
  userId     String

  user     User     @relation(fields: [userId], references: [id])
  todoItem TodoItem @relation(fields: [todoItemId], references: [id])
}

model TodoStatus {
  id         String  @id @default(cuid())
  date       DateTime
  status     Boolean
  userId     String
  todoItemId String

  user     User     @relation(fields: [userId], references: [id])
  todoItem TodoItem @relation(fields: [todoItemId], references: [id])

  @@unique([date, todoItemId], name: "key")
}

model TodoCategory {
  id        String     @id @default(cuid())
  name      String
  TodoItems TodoItem[]
}

model TodoItem {
  id         String       @id @default(cuid())
  name       String
  categoryId String
  rules      Json
  status     TodoStatus[]
  comments   Comment[]

  category TodoCategory @relation(fields: [categoryId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  comments      Comment[]
  itemStatus    TodoStatus[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
