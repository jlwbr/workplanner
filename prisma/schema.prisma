// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Planning {
  id        String   @id @default(cuid())
  date      DateTime
  channelId String

  channel      Channel        @relation(fields: [channelId], references: [id])
  PlanningItem PlanningItem[]
  @@unique([id, date, channelId])
}

model PlanningItem {
  id               String  @id @default(cuid())
  planningId       String
  planningRuleId   String?
  name             String
  priority         Int
  description      String
  minMorning       Int     @default(0)
  minAfternoon     Int     @default(0)
  minEvening       Int     @default(0)
  maxMorning       Int     @default(0)
  maxAfternoon     Int     @default(0)
  maxEvening       Int     @default(0)
  morningAsignee   User[]  @relation(name: "PlanningItem_morningAsignee")
  afternoonAsignee User[]  @relation(name: "PlanningItem_afternoonAsignee")
  eveningAsignee   User[]  @relation(name: "PlanningItem_eveningAsignee")
  ownerId          String?

  owner        User?         @relation(fields: [ownerId], references: [id])
  Planning     Planning      @relation(fields: [planningId], references: [id])
  PlanningRule PlanningRule? @relation(fields: [planningRuleId], references: [id])
}

model PlanningRule {
  id           String @id @default(cuid())
  name         String
  description  String
  priority     Int
  rule         String
  channelId    String
  minMorning   Int    @default(0)
  minAfternoon Int    @default(0)
  minEvening   Int    @default(0)
  maxMorning   Int    @default(0)
  maxAfternoon Int    @default(0)
  maxEvening   Int    @default(0)

  channel      Channel        @relation(fields: [channelId], references: [id])
  PlanningItem PlanningItem[]
}

model Channel {
  id           String         @id
  name         String         @unique
  members      User[]
  PlanningRule PlanningRule[]
  Planning     Planning[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String         @id @default(cuid())
  name             String?
  email            String?        @unique
  emailVerified    DateTime?
  image            String?
  admin            Boolean        @default(false)
  editor           Boolean        @default(false)
  accounts         Account[]
  sessions         Session[]
  channels         Channel[]
  MorningAsignee   PlanningItem[] @relation(name: "PlanningItem_morningAsignee")
  AfternoonAsignee PlanningItem[] @relation(name: "PlanningItem_afternoonAsignee")
  EveningAsignee   PlanningItem[] @relation(name: "PlanningItem_eveningAsignee")
  PlanningItem     PlanningItem[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
